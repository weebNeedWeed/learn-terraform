name: "Run TF Plan on each PR commit"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on: [pull_request]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: course-2/07-managing-multiple-envs/file-structure/staging
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
      - run: terraform init
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Plan
        id: plan
        run: terraform plan -var db-pass="hello123" -no-color
        continue-on-error: true
      - uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Exit If Plan Failed
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - uses: actions/setup-go@v5
      - name: Test
        working-directory: course-2/08-testing/tests/terratest
        run: go test -v .
